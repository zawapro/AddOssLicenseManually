apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.google.android.gms.oss-licenses-plugin'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.zawapro.addosslicensemanually"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.google.android.gms:play-services-oss-licenses:16.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// ライセンス情報を追加するタスク
task addMyLicenseTask {
    final String UTF_8 = "UTF-8"
    final byte[] LINE_SEPARATOR = System.getProperty("line.separator").getBytes(UTF_8)

    // generateLicensesタスクの直後に起動
    mustRunAfter tasks.findByName('generateLicenses')

    // 手動でライセンス情報を追加する
    doLast {
        def dependencyOutput = new File(project.buildDir, "generated/third_party_licenses")

        def resourceOutput = new File(dependencyOutput, "/res")
        def outputDir = new File(resourceOutput, "/raw")

        // ライセンスファイル
        def licensesFile = new File(outputDir, "third_party_licenses")
        // ライセンスファイルへの書き込み前に現在の位置を保持
        def start = licensesFile.length()

        // ライセンスファイルへ書き込み
        def licenseContent = 'This is my library license!!'
        licensesFile << licenseContent
        licensesFile << (LINE_SEPARATOR)

        // ライセンスメタデータファイルに書き込み
        def licensesMetadataFile = new File(outputDir, "third_party_license_metadata")
        licensesMetadataFile << ("${start}:${licenseContent.length()} my_library")
        licensesMetadataFile << (LINE_SEPARATOR)
    }
}

// preBuild前にライセンス情報を追加する
tasks.findByPath(':app:preBuild').dependsOn addMyLicenseTask